{"ast":null,"code":"import{createContext,useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext({});export const AuthProvider=_ref=>{let{children}=_ref;const navigate=useNavigate();const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);// Load user/token from localStorage on app start\nuseEffect(()=>{const savedUser=localStorage.getItem(\"user\");const savedToken=localStorage.getItem(\"token\");if(savedUser&&savedToken){setUser(JSON.parse(savedUser));setToken(savedToken);}setLoading(false);},[]);// Login function\nconst login=(userData,jwt)=>{setUser(userData);setToken(jwt);localStorage.setItem(\"user\",JSON.stringify(userData));localStorage.setItem(\"token\",jwt);// Redirect based on role\nif(userData.role===\"admin\")navigate(\"/admin\");else navigate(\"/user\");};// Logout function\nconst logout=()=>{setUser(null);setToken(null);localStorage.removeItem(\"user\");localStorage.removeItem(\"token\");navigate(\"/login\");};// Prevent rendering before checking localStorage\nif(loading)return null;return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,setUser,setToken,login,logout},children:children});};","map":{"version":3,"names":["createContext","useEffect","useState","useNavigate","jsx","_jsx","AuthContext","AuthProvider","_ref","children","navigate","user","setUser","token","setToken","loading","setLoading","savedUser","localStorage","getItem","savedToken","JSON","parse","login","userData","jwt","setItem","stringify","role","logout","removeItem","Provider","value"],"sources":["C:/Users/AK/OneDrive/Attachments/Desktop/CRM/flow-crm/frontend/src/Context/AuthContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user/token from localStorage on app start\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem(\"user\");\r\n    const savedToken = localStorage.getItem(\"token\");\r\n\r\n    if (savedUser && savedToken) {\r\n      setUser(JSON.parse(savedUser));\r\n      setToken(savedToken);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = (userData, jwt) => {\r\n    setUser(userData);\r\n    setToken(jwt);\r\n\r\n    localStorage.setItem(\"user\", JSON.stringify(userData));\r\n    localStorage.setItem(\"token\", jwt);\r\n\r\n    // Redirect based on role\r\n    if (userData.role === \"admin\") navigate(\"/admin\");\r\n    else navigate(\"/user\");\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"token\");\r\n\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // Prevent rendering before checking localStorage\r\n  if (loading) return null;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, setUser, setToken, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC1D,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,MAAO,MAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAAC,CAAC,CAE5C,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAAAE,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC9C,KAAM,CAAAC,UAAU,CAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAEhD,GAAIF,SAAS,EAAIG,UAAU,CAAE,CAC3BR,OAAO,CAACS,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAAC,CAC9BH,QAAQ,CAACM,UAAU,CAAC,CACtB,CACAJ,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAO,KAAK,CAAGA,CAACC,QAAQ,CAAEC,GAAG,GAAK,CAC/Bb,OAAO,CAACY,QAAQ,CAAC,CACjBV,QAAQ,CAACW,GAAG,CAAC,CAEbP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC,CACtDN,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAED,GAAG,CAAC,CAElC;AACA,GAAID,QAAQ,CAACI,IAAI,GAAK,OAAO,CAAElB,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAC7C,CAAAA,QAAQ,CAAC,OAAO,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAAAmB,MAAM,CAAGA,CAAA,GAAM,CACnBjB,OAAO,CAAC,IAAI,CAAC,CACbE,QAAQ,CAAC,IAAI,CAAC,CAEdI,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC,CAC/BZ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC,CAEhCpB,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAED;AACA,GAAIK,OAAO,CAAE,MAAO,KAAI,CAExB,mBACEV,IAAA,CAACC,WAAW,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAErB,IAAI,CAAEE,KAAK,CAAED,OAAO,CAAEE,QAAQ,CAAES,KAAK,CAAEM,MAAO,CAAE,CAAApB,QAAA,CAC5EA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}