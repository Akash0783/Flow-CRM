{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AK\\\\OneDrive\\\\Attachments\\\\Desktop\\\\CRM\\\\flow-crm\\\\frontend\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedToken = localStorage.getItem(\"token\");\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedToken && savedUser) {\n      setToken(savedToken);\n      setUser(JSON.parse(savedUser));\n    }\n    set;\n  }, [navigate]);\n  const login = (userData, jwt) => {\n    setUser(userData);\n    setToken(jwt);\n    localStorage.setItem(\"user\", JSON.stringify(userData));\n    localStorage.setItem(\"token\", jwt);\n    if (userData.role === \"admin\") {\n      navigate(\"/admin\");\n    } else {\n      navigate(\"/dashboard\");\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    setUser(null);\n    setToken(null);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        token,\n        setUser,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"FdiNLRb+JYlGU+aCQGglSgLZv2g=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","navigate","user","setUser","token","setToken","loading","setLoading","savedToken","localStorage","getItem","savedUser","JSON","parse","set","login","userData","jwt","setItem","stringify","role","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AK/OneDrive/Attachments/Desktop/CRM/flow-crm/frontend/src/Context/AuthContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({children})=>{\r\n    const navigate = useNavigate()\r\n    const[user,setUser] = useState(null); \r\n    const[token, setToken] = useState(null)\r\n    const[loading, setLoading] = useState(true)\r\n        useEffect(() => {\r\n            const savedToken = localStorage.getItem(\"token\");\r\n            const savedUser = localStorage.getItem(\"user\");\r\n\r\n            if (savedToken && savedUser) {\r\n                setToken(savedToken)\r\n                setUser(JSON.parse(savedUser));\r\n            }set \r\n        }, [navigate]);\r\n\r\n        const login = (userData, jwt) =>{\r\n            setUser(userData)\r\n            setToken(jwt)\r\n\r\n            localStorage.setItem(\"user\", JSON.stringify(userData))\r\n            localStorage.setItem(\"token\", jwt)\r\n\r\n            if(userData.role === \"admin\"){\r\n                navigate(\"/admin\")\r\n            }else{\r\n                navigate(\"/dashboard\")\r\n            }\r\n        }\r\n    const logout = ()=>{\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"user\");\r\n\r\n        setUser(null)\r\n        setToken(null)\r\n\r\n        navigate(\"/login\")\r\n    }\r\n    return(\r\n        <div>\r\n            <AuthContext.Provider value = {{user, token, setUser, login, logout}}>{children}</AuthContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAG;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAK,CAACQ,IAAI,EAACC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAK,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAK,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACvCD,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,IAAIF,UAAU,IAAIG,SAAS,EAAE;MACzBN,QAAQ,CAACG,UAAU,CAAC;MACpBL,OAAO,CAACS,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,CAAC;IAClC;IAACG,GAAG;EACR,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,MAAMc,KAAK,GAAGA,CAACC,QAAQ,EAAEC,GAAG,KAAI;IAC5Bd,OAAO,CAACa,QAAQ,CAAC;IACjBX,QAAQ,CAACY,GAAG,CAAC;IAEbR,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACH,QAAQ,CAAC,CAAC;IACtDP,YAAY,CAACS,OAAO,CAAC,OAAO,EAAED,GAAG,CAAC;IAElC,IAAGD,QAAQ,CAACI,IAAI,KAAK,OAAO,EAAC;MACzBnB,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC,MAAI;MACDA,QAAQ,CAAC,YAAY,CAAC;IAC1B;EACJ,CAAC;EACL,MAAMoB,MAAM,GAAGA,CAAA,KAAI;IACfZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IAE/BnB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IAEdJ,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EACD,oBACIL,OAAA;IAAAG,QAAA,eACIH,OAAA,CAACC,WAAW,CAAC0B,QAAQ;MAACC,KAAK,EAAI;QAACtB,IAAI;QAAEE,KAAK;QAAED,OAAO;QAAEY,KAAK;QAAEM;MAAM,CAAE;MAAAtB,QAAA,EAAEA;IAAQ;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtG,CAAC;AAEd,CAAC;AAAA5B,EAAA,CA1CYF,YAAY;EAAA,QACJJ,WAAW;AAAA;AAAAmC,EAAA,GADnB/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}