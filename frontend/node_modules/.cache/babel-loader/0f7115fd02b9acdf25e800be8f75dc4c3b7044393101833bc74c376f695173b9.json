{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AK\\\\OneDrive\\\\Attachments\\\\Desktop\\\\CRM\\\\flow-crm\\\\frontend\\\\src\\\\Context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport api from \"\"; // axios instance with baseURL + token handling\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // ✅ Check token validity when app loads\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          const res = await api.post(\"/auth/verify\");\n          if (res.data.valid) {\n            setUser({\n              id: res.data.userId,\n              role: res.data.role\n            });\n          } else {\n            localStorage.removeItem(\"token\");\n            setUser(null);\n          }\n        } catch (err) {\n          console.error(\"Token verify failed:\", err);\n          localStorage.removeItem(\"token\");\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    verifyToken();\n  }, []);\n\n  // ✅ Login function\n  const login = async (email, password) => {\n    try {\n      const res = await api.post(\"/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setUser(res.data.user); // backend should send {id, role, email,...}\n      navigate(\"/dashboard\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      throw ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed\";\n    }\n  };\n\n  // ✅ Logout function\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setUser(null);\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","navigate","verifyToken","token","localStorage","getItem","res","post","data","valid","id","userId","role","removeItem","err","console","error","login","email","password","setItem","_err$response","_err$response$data","response","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AK/OneDrive/Attachments/Desktop/CRM/flow-crm/frontend/src/Context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport api from \"\"; // axios instance with baseURL + token handling\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // ✅ Check token validity when app loads\r\n  useEffect(() => {\r\n    const verifyToken = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        try {\r\n          const res = await api.post(\"/auth/verify\");\r\n          if (res.data.valid) {\r\n            setUser({\r\n              id: res.data.userId,\r\n              role: res.data.role,\r\n            });\r\n          } else {\r\n            localStorage.removeItem(\"token\");\r\n            setUser(null);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Token verify failed:\", err);\r\n          localStorage.removeItem(\"token\");\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    verifyToken();\r\n  }, []);\r\n\r\n  // ✅ Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await api.post(\"/auth/login\", { email, password });\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      setUser(res.data.user); // backend should send {id, role, email,...}\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      throw err.response?.data?.message || \"Login failed\";\r\n    }\r\n  };\r\n\r\n  // ✅ Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setUser(null);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, login, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}